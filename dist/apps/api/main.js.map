{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/config/typeorm.config.ts","webpack:///./apps/api/src/app/task/dto/create-task.dto.ts","webpack:///./apps/api/src/app/task/dto/get-tasks-filter.dto.ts","webpack:///./apps/api/src/app/task/pipes/task-status-validation.pipe.ts","webpack:///./apps/api/src/app/task/task-status.enum.ts","webpack:///./apps/api/src/app/task/task.controller.ts","webpack:///./apps/api/src/app/task/task.entity.ts","webpack:///./apps/api/src/app/task/task.module.ts","webpack:///./apps/api/src/app/task/task.repository.ts","webpack:///./apps/api/src/app/task/task.service.ts","webpack:///./apps/api/src/main.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"class-validator\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get } from '@nestjs/common';\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  @Get()\r\n  getHello(): string {\r\n    return this.appService.getHello();\r\n  }\r\n}\r\n","import { Module } from \"@nestjs/common\";\r\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\r\nimport { AppController } from \"./app.controller\";\r\nimport { AppService } from \"./app.service\";\r\nimport { TaskModule } from \"./task/task.module\";\r\nimport { typeOrmConfig } from \"./config/typeorm.config\";\r\n\r\n@Module({\r\n    imports: [TaskModule, TypeOrmModule.forRoot(typeOrmConfig)],\r\n    controllers: [AppController],\r\n    providers: [AppService]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  getHello(): string {\r\n    return 'Hello World!';\r\n  }\r\n}\r\n","import { TypeOrmModuleOptions } from \"@nestjs/typeorm\";\r\nimport { Task } from '../task/task.entity';\r\n\r\nexport const typeOrmConfig: TypeOrmModuleOptions = {\r\n    type: \"mariadb\",\r\n    host: \"localhost\",\r\n    port: 3306,\r\n    username: \"taskmanuser\",\r\n    password: \"taskmanpassword\",\r\n    database: \"taskmandb\",\r\n    entities: [Task],\r\n    synchronize: true\r\n};\r\n","import { IsNotEmpty } from \"class-validator\";\r\n\r\nexport class CreateTaskDto {\r\n    @IsNotEmpty()\r\n    title: string;\r\n\r\n    @IsNotEmpty()\r\n    description: string;\r\n}\r\n","import {TaskStatus} from \"../task-status.enum\";\r\nimport {IsNotEmpty, IsOptional} from \"class-validator\";\r\n\r\nexport class GetTasksFilterDto {\r\n    @IsOptional()\r\n    status: TaskStatus;\r\n\r\n    @IsOptional()\r\n    @IsNotEmpty()\r\n    search: string;\r\n}\r\n","import { PipeTransform, BadRequestException } from \"@nestjs/common\";\r\nimport { TaskStatus } from '../task-status.enum';\r\n\r\nexport class TaskStatusValidationPipe implements PipeTransform {\r\n    readonly allowed = [TaskStatus.ACTIVE, TaskStatus.CLOSED, TaskStatus.OPEN];\r\n    transform(value: any) {\r\n        if (!this.isStatusValid(value)) {\r\n            throw new BadRequestException(\"Status is not valid\");\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private isStatusValid(status: any): boolean {\r\n        const idx = this.allowed.indexOf(status);\r\n        return idx !== -1;\r\n    }\r\n}\r\n","export enum TaskStatus {\r\n    OPEN = \"open\",\r\n    CLOSED = \"closed\",\r\n    ACTIVE = \"active\"\r\n}\r\n   ","import {\r\n    Body,\r\n    Controller,\r\n    Delete,\r\n    Get,\r\n    Param,\r\n    ParseIntPipe,\r\n    Patch,\r\n    Post,\r\n    Query,\r\n    UsePipes,\r\n    ValidationPipe\r\n} from \"@nestjs/common\";\r\nimport {TaskService} from \"./task.service\";\r\nimport {CreateTaskDto} from \"./dto/create-task.dto\";\r\nimport {TaskStatusValidationPipe} from \"./pipes/task-status-validation.pipe\";\r\nimport {Task} from \"./task.entity\";\r\nimport {TaskStatus} from \"./task-status.enum\";\r\nimport {GetTasksFilterDto} from \"./dto/get-tasks-filter.dto\";\r\n\r\n@Controller(\"task\")\r\nexport class TaskController {\r\n    constructor(private taskService: TaskService) {\r\n    }\r\n\r\n    @Get()\r\n    findTasks(@Query() filterDto: GetTasksFilterDto) {\r\n        return this.taskService.findAll(filterDto);\r\n    }\r\n\r\n    @Post()\r\n    @UsePipes(ValidationPipe)\r\n    create(@Body() createTaskDto: CreateTaskDto): Promise<Task> {\r\n        return this.taskService.create(createTaskDto);\r\n    }\r\n\r\n    @Get(\"/:id\")\r\n    findById(@Param(\"id\", ParseIntPipe) id: number): Promise<Task> {\r\n        return this.taskService.findById(id);\r\n    }\r\n\r\n    @Delete(\"/:id\")\r\n    delete(@Param(\"id\") id: number) {\r\n        return this.taskService.delete(id);\r\n    }\r\n\r\n    @Patch(\"/:id/status\")\r\n    updateStatus(\r\n        @Param(\"id\", ParseIntPipe) id: number,\r\n        @Body(\"status\", TaskStatusValidationPipe) body: TaskStatus\r\n    ) {\r\n        return this.taskService.updateStatus(id, body);\r\n    }\r\n}\r\n","import { BaseEntity, Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\r\nimport { TaskStatus } from './task-status.enum';\r\n\r\n@Entity('Task')\r\nexport class Task extends BaseEntity {\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column()\r\n    title: string;\r\n\r\n    @Column()\r\n    description: string;\r\n\r\n    @Column({type: 'text'})\r\n    status: TaskStatus;\r\n}","import { Module } from \"@nestjs/common\";\r\nimport { TaskController } from \"./task.controller\";\r\nimport { TaskService } from \"./task.service\";\r\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\r\nimport { TaskRepository } from \"./task.repository\";\r\n\r\n@Module({\r\n    imports: [TypeOrmModule.forFeature([TaskRepository])],\r\n    controllers: [TaskController],\r\n    providers: [TaskService]\r\n})\r\nexport class TaskModule {}\r\n","import {EntityRepository, Repository} from \"typeorm\";\r\nimport {Task} from \"./task.entity\";\r\nimport {CreateTaskDto} from \"./dto/create-task.dto\";\r\nimport {TaskStatus} from \"./task-status.enum\";\r\nimport {GetTasksFilterDto} from \"./dto/get-tasks-filter.dto\";\r\n\r\n@EntityRepository(Task)\r\nexport class TaskRepository extends Repository<Task> {\r\n    async createTask(createTaskDto: CreateTaskDto): Promise<Task> {\r\n        const {title, description} = createTaskDto;\r\n        const task = new Task();\r\n        task.title = title;\r\n        task.description = description;\r\n        task.status = TaskStatus.OPEN;\r\n\r\n        await task.save();\r\n        return task;\r\n    }\r\n\r\n    getTasks(filterDto: GetTasksFilterDto): Promise<Task[]> {\r\n        const {search, status} = filterDto;\r\n        const query = this.createQueryBuilder(\"task\");\r\n\r\n        if (status) {\r\n            query.andWhere(\"task.status = :status\", {status});\r\n        }\r\n\r\n        if (search) {\r\n            query\r\n                .andWhere(\"task.title LIKE :search OR task.description LIKE :search\", {search: `%${search}%`})\r\n        }\r\n\r\n        return query.getMany();\r\n    }\r\n}\r\n","import {Injectable, NotFoundException} from \"@nestjs/common\";\r\nimport {TaskRepository} from \"./task.repository\";\r\nimport {InjectRepository} from \"@nestjs/typeorm\";\r\nimport {Task} from \"./task.entity\";\r\nimport {TaskStatus} from \"./task-status.enum\";\r\nimport {CreateTaskDto} from \"./dto/create-task.dto\";\r\nimport {DeleteResult} from \"typeorm\";\r\nimport {GetTasksFilterDto} from \"./dto/get-tasks-filter.dto\";\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n    constructor(\r\n        @InjectRepository(TaskRepository) private taskRepository: TaskRepository\r\n    ) {\r\n    }\r\n\r\n    findAll(taskFilter: GetTasksFilterDto) {\r\n        return this.taskRepository.getTasks(taskFilter);\r\n    }\r\n\r\n    async create(createTaskDto: CreateTaskDto): Promise<Task> {\r\n        return this.taskRepository.createTask(createTaskDto);\r\n    }\r\n\r\n    async findById(id: number): Promise<Task> {\r\n        const found = await this.taskRepository.findOne(id);\r\n\r\n        if (!found) {\r\n            throw new NotFoundException();\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    delete(id: number): Promise<DeleteResult> {\r\n        return this.taskRepository.delete(id);\r\n    }\r\n\r\n    async updateStatus(id: number, status: TaskStatus): Promise<Task> {\r\n        const task = await this.findById(id);\r\n        task.status = status;\r\n        await task.save();\r\n        return task;\r\n    }\r\n}\r\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport {NestFactory} from \"@nestjs/core\";\r\n\r\nimport {AppModule} from \"./app/app.module\";\r\n\r\nasync function bootstrap() {\r\n    const app = await NestFactory.create(AppModule);\r\n    const globalPrefix = \"api\";\r\n    app.setGlobalPrefix(globalPrefix);\r\n    app.enableCors();\r\n\r\n    const port = process.env.port || 3333;\r\n    await app.listen(port, () => {\r\n        console.log(\r\n            \"Listening at http://localhost:\" + port + \"/\" + globalPrefix\r\n        );\r\n    });\r\n}\r\n\r\nbootstrap();\r\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"class-validator\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}