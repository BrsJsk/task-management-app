{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/config/typeorm.config.ts","webpack:///./apps/api/src/app/task/dto/create-task.dto.ts","webpack:///./apps/api/src/app/task/task-status.enum.ts","webpack:///./apps/api/src/app/task/task.controller.ts","webpack:///./apps/api/src/app/task/task.entity.ts","webpack:///./apps/api/src/app/task/task.module.ts","webpack:///./apps/api/src/app/task/task.repository.ts","webpack:///./apps/api/src/app/task/task.service.ts","webpack:///./apps/api/src/main.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"class-validator\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n","import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { TaskModule } from \"./task/task.module\";\nimport { typeOrmConfig } from \"./config/typeorm.config\";\n\n@Module({\n    imports: [TaskModule, TypeOrmModule.forRoot(typeOrmConfig)],\n    controllers: [AppController],\n    providers: [AppService]\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n","import { TypeOrmModuleOptions } from \"@nestjs/typeorm\";\nimport { Task } from '../task/task.entity';\n\nexport const typeOrmConfig: TypeOrmModuleOptions = {\n    type: \"mariadb\",\n    host: \"localhost\",\n    port: 3306,\n    username: \"taskmanuser\",\n    password: \"taskmanpassword\",\n    database: \"taskmandb\",\n    entities: [Task],\n    synchronize: true\n};\n","import { IsNotEmpty } from \"class-validator\";\n\nexport class CreateTaskDto {\n    @IsNotEmpty()\n    title: string;\n\n    @IsNotEmpty()\n    description: string;\n}\n","export enum TaskStatus {\n    OPEN = 'open',\n    CLOSED = 'closed',\n    ACTIVE = 'active'\n   };\n   ","import {\n    Controller,\n    Get,\n    Body,\n    Post,\n    Param,\n    Delete,\n    Patch,\n    Query,\n    UsePipes,\n    ValidationPipe,\n    ParseIntPipe\n} from \"@nestjs/common\";\nimport { TaskService } from \"./task.service\";\nimport { CreateTaskDto } from \"./dto/create-task.dto\";\nimport { UpdateStatusDto } from \"./dto/update-status.dto\";\nimport { GetTasksFilterDto } from \"./dto/get-tasks-filter.dto\";\nimport { TaskStatusValidationPipe } from \"./pipes/task-status-validation.pipe\";\nimport { Task } from \"./task.entity\";\nimport { TaskStatus } from \"./task-status.enum\";\n\n@Controller(\"task\")\nexport class TaskController {\n    constructor(private taskService: TaskService) {}\n\n    // @Get()\n    // findTasks(@Query() filterDto: GetTasksFilterDto) {\n    //     if (Object.keys(filterDto)) {\n    //         return this.taskService.getTasksWithFilters(filterDto);\n    //     }\n\n    //     return this.taskService.findAll();\n    // }\n\n    @Post()\n    @UsePipes(ValidationPipe)\n    create(@Body() createTaskDto: CreateTaskDto): Promise<Task> {\n        return this.taskService.create(createTaskDto);\n    }\n\n    @Get(\"/:id\")\n    findById(@Param(\"id\", ParseIntPipe) id: number): Promise<Task> {\n        return this.taskService.findById(id);\n    }\n\n    @Delete(\"/:id\")\n    delete(@Param(\"id\") id: number) {\n        return this.taskService.delete(id);\n    }\n\n    // @Patch(\"/:id/status\")\n    // updateStatus(\n    //     @Param(\"id\") id: string,\n    //     @Body(\"status\", TaskStatusValidationPipe) body: UpdateStatusDto\n    // ) {\n    //     return this.taskService.updateStatus(id, body.status);\n    // }\n}\n","import { BaseEntity, Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\nimport { TaskStatus } from './task-status.enum';\n\n@Entity('Task')\nexport class Task extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    title: string;\n\n    @Column()\n    description: string;\n\n    @Column({type: 'text'})\n    status: TaskStatus;\n}","import { Module } from \"@nestjs/common\";\nimport { TaskController } from \"./task.controller\";\nimport { TaskService } from \"./task.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { TaskRepository } from \"./task.repository\";\n\n@Module({\n    imports: [TypeOrmModule.forFeature([TaskRepository])],\n    controllers: [TaskController],\n    providers: [TaskService]\n})\nexport class TaskModule {}\n","import { Repository, EntityRepository } from \"typeorm\";\nimport { Task } from \"./task.entity\";\nimport { CreateTaskDto } from \"./dto/create-task.dto\";\nimport { TaskStatus } from \"./task-status.enum\";\n\n@EntityRepository(Task)\nexport class TaskRepository extends Repository<Task> {\n    async createTask(createTaskDto: CreateTaskDto): Promise<Task> {\n        const { title, description } = createTaskDto;\n        const task = new Task();\n        task.title = title;\n        task.description = description;\n        task.status = TaskStatus.OPEN;\n\n        await task.save();\n        return task;\n    }\n}\n","import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { TaskRepository } from \"./task.repository\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Task } from \"./task.entity\";\nimport { TaskStatus } from \"./task-status.enum\";\nimport { CreateTaskDto } from \"./dto/create-task.dto\";\nimport { DeleteResult } from 'typeorm';\n\n@Injectable()\nexport class TaskService {\n    constructor(\n        @InjectRepository(TaskRepository) private taskRepository: TaskRepository\n    ) {}\n    // private tasks: Task[] = [];\n\n    // findAll(): Task[] {\n    //     return this.tasks;\n    // }\n\n    // getTasksWithFilters(filterDto: GetTasksFilterDto): Task[] {\n    //     const { search, status } = filterDto;\n    //     let tasks = this.findAll();\n    //     if (search) {\n    //         tasks = tasks.filter(\n    //             task =>\n    //                 task.description.includes(search) ||\n    //                 task.title.includes(search)\n    //         );\n    //     }\n\n    //     if (status) {\n    //         tasks = tasks.filter(task => task.status === status);\n    //     }\n    //     return this.tasks;\n    // }\n\n    async create(createTaskDto: CreateTaskDto): Promise<Task> {\n        return this.taskRepository.createTask(createTaskDto);\n    }\n\n    async findById(id: number): Promise<Task> {\n        const found = await this.taskRepository.findOne(id);\n\n        if (!found) {\n            throw new NotFoundException();\n        }\n\n        return found;\n    }\n\n    delete(id: number): Promise<DeleteResult> {\n        return this.taskRepository.delete(id);\n    }\n\n    // updateStatus(id: string, status: TaskStatus) {\n    //     this.tasks = this.tasks.map(task => {\n    //         if (task.id === id) {\n    //             task.status = status;\n    //         }\n    //         return task;\n    //     });\n\n    //     return this.findById(id);\n    // }\n}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { NestFactory } from \"@nestjs/core\";\n\nimport { AppModule } from \"./app/app.module\";\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = \"api\";\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.port || 3333;\n  await app.listen(port, () => {\n    console.log(\"Listening at http://localhost:\" + port + \"/\" + globalPrefix);\n  });\n}\n\nbootstrap();\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"class-validator\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}